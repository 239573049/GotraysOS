import { Col, Divider, Modal, Row } from "antd";
import Search from "antd/es/input/Search";
import { Component, ReactNode } from "react";
import Icon from "@ant-design/icons";
import "./index.scss";
import WindowsForms from "../windows-forms";

interface IProps {
  menuOpen: boolean;
  onCancel: any;
}

interface IState {
  windowsForm: any[];
  application: any[];
}

const Blog = () => (
  <svg
    className="icon"
    viewBox="0 0 1024 1024"
    version="1.1"
    xmlns="http://www.w3.org/2000/svg"
    p-id="2407"
    width="40"
    height="40"
  >
    <path
      d="M1003.988341 920.409302c0 47.254822-38.308713 85.563535-85.563535 85.563535H105.575194c-47.254822 0-85.563535-38.308713-85.563535-85.563535s38.308713-85.563535 85.563535-85.563535h812.849612c47.254822 0 85.563535 38.308713 85.563535 85.563535z"
      fill="#A5A5A5"
      p-id="2408"
    ></path>
    <path
      d="M939.817674 321.464558v470.595473c0 47.254822-38.308713 85.571473-85.571472 85.571473h-684.492404c-47.26276 0-85.571473-38.316651-85.571472-85.571473V321.464558c0-47.254822 38.308713-85.563535 85.571472-85.563535h684.492404c47.26276 0 85.571473 38.308713 85.571472 85.571473z"
      fill="#CCCAC4"
      p-id="2409"
    ></path>
    <path
      d="M854.25414 834.845767H169.74586a42.785736 42.785736 0 0 1-42.785736-42.785736V321.464558a42.785736 42.785736 0 0 1 42.785736-42.785736h684.50828a42.785736 42.785736 0 0 1 42.785736 42.785736v470.595473a42.785736 42.785736 0 0 1-42.785736 42.785736z"
      fill="#F2EFE2"
      p-id="2410"
    ></path>
    <path
      d="M800.775938 412.378295H223.224062a32.085333 32.085333 0 0 1 0-64.170667h577.551876a32.085333 32.085333 0 0 1 0 64.170667zM490.607132 492.591628a32.085333 32.085333 0 0 0-32.085334-32.085333H223.224062a32.085333 32.085333 0 0 0 0 64.170666h235.297736a32.085333 32.085333 0 0 0 32.085334-32.085333z m342.254139 0a32.085333 32.085333 0 0 0-32.085333-32.085333H565.478202a32.085333 32.085333 0 0 0 0 64.170666h235.297736a32.085333 32.085333 0 0 0 32.085333-32.085333z"
      fill="#BFBBA3"
      p-id="2411"
    ></path>
    <path
      d="M800.775938 759.982636H223.224062a32.085333 32.085333 0 0 1-32.085333-32.085334V599.548031a32.085333 32.085333 0 0 1 32.085333-32.085333h577.551876a32.085333 32.085333 0 0 1 32.085333 32.085333v128.349271a32.085333 32.085333 0 0 1-32.085333 32.085334z"
      fill="#FFD880"
      p-id="2412"
    ></path>
    <path
      d="M288.466357 741.201364l-4.477024 4.484962 0.15876 0.158759-36.697302 36.705241a14.050233 14.050233 0 0 1-19.860838 0l-36.697302-36.705241 0.15876-0.158759-4.477023-4.484962a32.863256 32.863256 0 1 1 46.468961-46.468961l4.477023 4.484961 4.477023-4.484961a32.863256 32.863256 0 1 1 46.468962 46.468961z"
      fill="#FC8059"
      p-id="2413"
    ></path>
    <path
      d="M743.019163 583.862574l-42.785737 57.042356a21.392868 21.392868 0 0 1-34.212713 0l-42.785736-57.042356a21.392868 21.392868 0 0 1-4.286512-12.835721V64.773953a42.785736 42.785736 0 0 1 42.785737-42.777798h42.785736a42.785736 42.785736 0 0 1 42.785736 42.785736v506.244962c-0.007938 4.627845-1.508217 9.128682-4.286511 12.835721z"
      fill="#D6A154"
      p-id="2414"
    ></path>
    <path
      d="M731.25507 599.548031l-31.013706 41.356899a21.392868 21.392868 0 0 1-34.228589 0l-31.013705-41.356899h96.256z"
      fill="#B26932"
      p-id="2415"
    ></path>
    <path
      d="M618.956403 513.984496V64.773953a42.785736 42.785736 0 0 1 42.785737-42.777798h42.777798a42.785736 42.785736 0 0 1 42.785736 42.785736V513.984496h-128.357209z"
      fill="#FFD880"
      p-id="2416"
    ></path>
    <path
      d="M683.12707 513.984496V21.996155h21.392868a42.785736 42.785736 0 0 1 42.785736 42.785736V513.984496h-64.178604z"
      fill="#FCC159"
      p-id="2417"
    ></path>
    <path
      d="M747.297736 64.773953v42.785737H618.956403V64.773953a42.785736 42.785736 0 0 1 42.777799-42.777798h42.785736a42.785736 42.785736 0 0 1 42.777798 42.785736z"
      fill="#FC8059"
      p-id="2418"
    ></path>
    <path
      d="M950.708589 824.042171c3.341891-10.057426 5.151752-20.813395 5.151752-31.974202V321.464558c0-56.018357-45.579907-101.606202-101.606201-101.606201H763.340403V64.773953c0-32.426667-26.38586-58.820465-58.820465-58.820465h-42.785736c-32.434605 0-58.820465 26.393798-58.820466 58.820465v155.084404H169.737922c-56.026295 0-101.606202 45.587845-101.606201 101.606201v470.595473c0 11.168744 1.80986 21.916775 5.15969 31.974202A101.49507 101.49507 0 0 0 3.968992 920.409302c0 56.026295 45.579907 101.606202 101.606202 101.606202h812.849612c56.026295 0 101.606202-45.579907 101.606202-101.606202a101.487132 101.487132 0 0 0-69.322419-96.367131zM634.99907 64.773953a26.766884 26.766884 0 0 1 26.735132-26.735131h42.785736a26.766884 26.766884 0 0 1 26.735132 26.743069v26.735132H634.99907V64.773953z m96.256 58.828404v374.339472h-32.085334V123.602357h32.085334z m-96.256 0h32.085333v374.339472h-32.085333V123.602357z m0 406.424806H731.247132v40.99969a5.397829 5.397829 0 0 1-1.071628 3.206945l-42.785737 57.042357a5.247008 5.247008 0 0 1-4.270635 2.143256 5.247008 5.247008 0 0 1-4.286512-2.143256l-42.777798-57.034419a5.397829 5.397829 0 0 1-1.071628-3.214883v-40.99969zM100.224992 321.464558c0-38.332527 31.188341-69.520868 69.520868-69.520868h433.167876v319.083163c0 8.041178 2.651287 16.010915 7.48552 22.464496l42.785736 57.034418a37.110078 37.110078 0 0 0 29.942078 14.971039 37.118016 37.118016 0 0 0 29.950015-14.971039l42.785737-57.034418a37.665736 37.665736 0 0 0 7.485519-22.464496V251.94369h90.913737c38.332527 0 69.51293 31.196279 69.51293 69.528806v470.595473c0 38.332527-31.180403 69.520868-69.51293 69.520868H169.737922c-38.332527 0-69.520868-31.188341-69.520868-69.520868V321.464558zM918.424806 989.930171H105.575194c-38.340465 0-69.520868-31.188341-69.520868-69.520869a69.401798 69.401798 0 0 1 52.446263-67.393488c18.55107 24.671256 48.064496 40.658357 81.245271 40.658357h684.50828c33.180775 0 62.694202-15.987101 81.253209-40.666295a69.409736 69.409736 0 0 1 52.438325 67.401426c0 38.340465-31.188341 69.520868-69.520868 69.520869z m-572.201674-48.128a16.034729 16.034729 0 0 1-16.042667 16.034728H159.053395a16.034729 16.034729 0 1 1 0-32.077395h171.12707a16.034729 16.034729 0 0 1 16.034729 16.034729z m534.766139 0a16.034729 16.034729 0 0 1-16.034728 16.034728H544.077395a16.034729 16.034729 0 1 1 0-32.077395h320.861272a16.034729 16.034729 0 0 1 16.042666 16.034729z m-393.589085 0a16.034729 16.034729 0 0 1-16.042667 16.034728h-2.143255a16.034729 16.034729 0 1 1 0-32.077395h2.143255a16.034729 16.034729 0 0 1 16.042667 16.034729z m-66.313922 0a16.034729 16.034729 0 0 1-16.034729 16.034728h-2.143256a16.034729 16.034729 0 1 1 0-32.077395h2.143256a16.034729 16.034729 0 0 1 16.034729 16.034729z"
      fill="#4C4C4C"
      p-id="2419"
    ></path>
  </svg>
);

const Wolf = () => (
  <svg
    className="icon"
    viewBox="0 0 1024 1024"
    version="1.1"
    xmlns="http://www.w3.org/2000/svg"
    p-id="2587"
    width="40"
    height="40"
  >
    <path
      d="M609.606809 942.730159h-195.241618s-1.499997 0.118 0 20.31796c2.323995 31.321939 43.707915 60.951881 97.619809 60.951881h0.226c53.665895 0 94.857815-29.629942 97.17181-60.951881 1.491997-20.201961 0.224-20.31796 0.223999-20.31796z"
      fill="#FFDEB7"
      p-id="2588"
    ></path>
    <path
      d="M708.310617 117.013771c-37.105928 40.71592-32.663936 104.227796 9.389981 139.811727l99.319806 84.037836c12.061976-178.847651-5.20799-289.641434-20.14196-307.593399-14.209972 6.263988-49.185904 40.531921-88.567827 83.743836zM227.119556 33.269935c-14.937971 17.951965-32.207937 128.745749-20.14196 307.593399l99.319806-84.037836c42.053918-35.581931 46.493909-99.093806 9.389981-139.811727-39.379923-43.211916-74.357855-77.479849-88.567827-83.743836z"
      fill="#C3B9B1"
      p-id="2589"
    ></path>
    <path
      d="M690.794651 910.222222c35.555931-80.253843 146.285714-65.015873 146.285714-65.015873v-48.761905l97.52381 65.015873v-113.777777l48.761904 16.253968c0-71.52386-32.233937-285.037443-153.5397-441.449138-160.239687-206.613596-475.413071-206.613596-635.652758 0-121.305763 156.409695-153.5397 369.923277-153.5397 441.449138l48.761904-16.253968v113.777777l97.52381-65.015873v48.761905s110.729784-15.23797 146.285714 65.015873l65.015873-16.253968h195.047619l97.52581 16.253968z"
      fill="#FFEBD2"
      p-id="2590"
    ></path>
    <path
      d="M334.899346 680.540671l144.593717 197.173615V455.111111H115.547774C58.133886 582.058863 40.635921 711.358611 40.635921 763.936508l48.761904-16.253968v113.777777c46.779909-102.911799 109.709786-162.743682 154.703698-194.993619 29.167943-20.907959 69.573864-14.865971 90.797823 14.073973zM689.100654 680.540671l-144.593717 197.173615V455.111111h363.945289c57.411888 126.947752 74.911854 256.2475 74.911853 308.825397l-48.761904-16.253968v113.777777c-46.777909-102.911799-109.709786-162.743682-154.703698-194.993619-29.169943-20.907959-69.575864-14.865971-90.797823 14.073973z"
      fill="#C3B9B1"
      p-id="2591"
    ></path>
    <path
      d="M593.270841 617.650794h-162.539682c-17.269966 93.283818-65.015873 162.207683-65.015873 267.411477 0 64.371874 48.761905 89.171826 81.269841 89.171826s65.015873-15.24997 65.015873-15.24997 32.507937 15.24997 65.015873 15.24997 81.269841-24.799952 81.269841-89.171826c0-105.203795-47.747907-174.12766-65.015873-267.411477z"
      fill="#FFEBD2"
      p-id="2592"
    ></path>
    <path
      d="M849.014342 348.791319c10.03398-145.905715 3.433993-303.017408-29.369943-338.679339C811.958414 1.753997 803.80243 0 798.324441 0c-32.397937 0-120.445765 99.221806-178.135652 168.699671l-0.995998-0.338c-69.325865-23.439954-145.061717-23.439954-214.387582 0l-0.995998 0.338C346.119324 99.221806 258.071496 0 225.673559 0c-5.475989 0-13.635973 1.753997-21.317958 10.11198-32.803936 35.66393-39.405923 192.771623-29.369943 338.679339-105.539794 153.177701-134.351738 347.555321-134.351737 415.145189 86.94983-198.743612 211.869586-264.589483 265.94548-284.593444 15.23797-5.635989 31.315939-8.277984 47.587907-7.951985 25.67795 0.513999 46.685909 20.851959 49.895903 46.33191l42.919916 340.483335h130.031746l42.917916-340.483335c3.211994-25.47995 24.219953-45.819911 49.897903-46.33191 16.271968-0.325999 32.349937 2.313995 47.587907 7.951985 54.071894 20.001961 178.99565 85.847832 265.94548 284.593444 0.002-67.589868-28.813944-261.967488-134.349737-415.145189zM227.119556 33.269935c14.209972 6.263988 49.185904 40.531921 88.567827 83.743836 15.093971 16.561968 23.277955 36.893928 24.867952 57.587888 0.971998 12.627975-5.445989 24.497952-16.319968 30.991939-46.599909 27.821946-85.999832 63.449876-119.129768 103.489798-8.097984-160.147687 7.983984-258.949494 22.013957-275.813461z m481.193061 83.743836c39.379923-43.215916 74.357855-77.479849 88.567827-83.743836 14.029973 16.863967 30.109941 115.665774 22.011957 275.813461-33.129935-40.041922-72.531858-75.665852-119.129768-103.489798-10.873979-6.493987-17.289966-18.363964-16.319968-30.991939 1.591997-20.68996 9.773981-41.02392 24.869952-57.587888z"
      fill="#878791"
      p-id="2593"
    ></path>
    <path
      d="M349.461317 536.380952m-32.507936 0a32.507937 32.507937 0 1 0 65.015873 0 32.507937 32.507937 0 1 0-65.015873 0Z"
      fill="#464655"
      p-id="2594"
    ></path>
    <path
      d="M674.540683 536.380952m-32.507937 0a32.507937 32.507937 0 1 0 65.015873 0 32.507937 32.507937 0 1 0-65.015873 0Z"
      fill="#464655"
      p-id="2595"
    ></path>
    <path
      d="M577.016873 858.210324c0 31.419939-29.107943 68.265867-65.015873 68.265866s-65.015873-36.847928-65.015873-68.265866c0-31.419939 29.107943-45.511911 65.015873-45.511911 35.90593 0 65.015873 14.091972 65.015873 45.511911z"
      fill="#464655"
      p-id="2596"
    ></path>
  </svg>
);

const Editor = () => (
  <svg
    className="icon"
    viewBox="0 0 1024 1024"
    version="1.1"
    xmlns="http://www.w3.org/2000/svg"
    p-id="3395"
    width="40"
    height="40"
  >
    <path
      d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64z m243.7 589.2L512 794 268.3 653.2V371.8l110-63.6-0.4-0.2h0.2L512 231l134 77h-0.2l-0.3 0.2 110.1 63.6v281.4zM307.9 536.7l87.6 49.9V681l96.7 55.9V524.8L307.9 418.4z m203.9-151.8L418 331l-91.1 52.6 185.2 107 185.2-106.9-91.4-52.8z m20 352l97.3-56.2v-94.1l87-49.5V418.5L531.8 525z"
      fill="#1296DB"
      p-id="3396"
    ></path>
  </svg>
);

const Masa = () => (
  <svg
    className="icon"
    viewBox="0 0 1024 1024"
    version="1.1"
    xmlns="http://www.w3.org/2000/svg"
    p-id="3395"
    width="40"
    height="40"
  >
    <path
      d="M929.279165 425.473197a51.199898 51.199898 0 0 0-51.199897 51.199898v409.59918a37.375925 37.375925 0 0 1-36.863926 36.863927H139.264745a36.863926 36.863926 0 0 1-36.863926-36.863927V182.785682a36.863926 36.863926 0 0 1 36.863926-36.863926h393.215214a51.199898 51.199898 0 0 0 0-102.399795H139.264745A139.263721 139.263721 0 0 0 0.001024 182.785682v701.950597A139.263721 139.263721 0 0 0 139.264745 1024h701.950597a139.263721 139.263721 0 0 0 139.263721-139.263721v-409.599181a51.199898 51.199898 0 0 0-51.199898-49.663901z"
      fill="#333333"
      p-id="1403"
    ></path>
    <path
      d="M1020.414983 31.233986a51.199898 51.199898 0 0 0-27.647945-27.647945A54.78389 54.78389 0 0 0 972.799078 0.002048h-264.70347a51.199898 51.199898 0 0 0 0 102.399795h139.77572L474.624075 475.649097a51.199898 51.199898 0 0 0 0 72.191855 51.199898 51.199898 0 0 0 72.191855 0l373.247254-373.247253v141.311717a51.199898 51.199898 0 0 0 102.399795 0V51.201946a54.78389 54.78389 0 0 0-2.047996-19.96796z"
      fill="#333333"
      p-id="1404"
    ></path>
  </svg>
);


export default class WidowsTools extends Component<IProps, IState> {
  state: Readonly<IState> = {
    windowsForm: [],
    application: [],
  };

  openTools(x: any) {
    var { windowsForm } = this.state;
    windowsForm.push({
      open: true,
      key: x.key,
      href: x.href,
    });
    this.setState({
      windowsForm: [...windowsForm],
    });
  }

  constructor(props: IProps) {
    super(props);
    var { application } = this.state;

    application.push({
      key: "token",
      icon: Blog,
      title: "Token博客",
      href: "http://blog.tokengo.top/",
    });
    application.push({
      key: "blazorUpdate",
      icon: Editor,
      title: "Blazor 编辑器",
      href: "http://blazor.tokengo.top/",
    });

    application.push({
      key: "dotnet9",
      icon: Wolf,
      title: "沙漠的狼",
      href: "https://dotnet9.com/",
    });

    application.push({
      key: "wosperry",
      icon: Masa,
      title: "Perry",
      href: "https://wosperry.com/",
    });

    application.push({
      key: "Masa Blazor",
      icon: Masa,
      title: "Masa Blazor",
      href: "https://www.masastack.com/blazor",
    });

    application.push({
      key: "Masa Blazor Pro",
      icon: Masa,
      title: "Masa Blazor Pro",
      href: "https://blazor-pro.masastack.com/dashboard/ecommerce",
    });

    this.setState({
      application,
    });
  }

  render(): ReactNode {
    var { windowsForm, application } = this.state;
    return (
      <>
        <Modal
          open={this.props.menuOpen}
          onCancel={(e) => {
            this.props.onCancel(e);
          }}
          style={{ top: "calc(100vh - 800px)" }}
          closable={false}
          footer={[]}
          bodyStyle={{ backgroundColor: "rgb(173 179 191/8%)" }}
          mask={false}
          modalRender={(Node) => (
            <div className="info-popover-modal">{Node}</div>
          )}
        >
          <div className="info-popover">
            <div className="search">
              <Search
                placeholder="在次键入搜索内容"
                size="large"
                height={50}
                onSearch={() => {}}
                style={{ width: 700 }}
              />
            </div>
            <span className="title">应用列表</span>
            <Row gutter={[16, 16]} className="tools-application">
              {application.map((x: any) => {
                return (
                  <Col
                    span={4}
                    className="list"
                    onClick={() => this.openTools(x)}
                  >
                    <Icon component={x.icon} />
                    <div>{x.title}</div>
                  </Col>
                );
              })}
            </Row>
          </div>
        </Modal>
        {windowsForm.map((x: any) => {
          return (
            <WindowsForms
              href={x.href}
              key={x.key}
              onCancel={(value: boolean) => {
                if (value) {
                  x.open = false;
                  windowsForm.slice(windowsForm.indexOf(x), 1);
                  this.setState({
                    windowsForm,
                  });
                }
              }}
              open={x.open}
            />
          );
        })}
      </>
    );
  }
}
